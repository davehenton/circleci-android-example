# This configuration was automatically generated from a CircleCI 1.0 config.
# It should include any build commands you had along with commands that CircleCI
# inferred from your project structure. We strongly recommend you read all the
# comments in this file to understand the structure of CircleCI 2.0, as the idiom
# for configuration has changed substantially in 2.0 to allow arbitrary jobs rather
# than the prescribed lifecycle of 1.0. In general, we recommend using this generated
# configuration as a reference rather than using it in production, though in most
# cases it should duplicate the execution of your original 1.0 config.
# https://circleci.com/api/v1.1/project/github/volodia-chornenkyy/circleci-android-example/config-translation?branch=v2_migration
version: 2
jobs:
  build:
    working_directory: ~/davehenton/circleci-android-example
    parallelism: 1
    shell: /bin/bash --login
    docker:
    - image: circleci/android:api-24-alpha
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly. In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    # Dependencies
    #   This would typically go in either a build or a build-and-test job when using workflows
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - vendor/bundle
        - ~/virtualenvs
        - ~/.m2
        - ~/.ivy2
        - ~/.bundle
        - ~/.go_workspace
        - ~/.gradle
        - ~/.cache/bower
        # These cache paths were specified in the 1.0 config
        - ~/.android
        - ~/android
    # Test
    #   This would typically be a build job when using workflows, possibly combined with build
    # This is based on your 1.0 configuration file or project settings
    - run: ./gradlew build
    - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
    - run: chmod +x ./cc-test-reporter
    - run: ./cc-test-reporter before-build
    - run: ./gradlew jacocoTestReport
    - run: ./cc-test-reporter after-build -d
    # Teardown
    - store_artifacts:
        name: Store test reports
        path: app/build/reports/tests
        destination: tests
    - store_artifacts:
        name: Store apk and other outputs
        path: app/build/outputs
        destination: outputs
    - store_artifacts:
        name: Store Lint report
        path: app/build/reports/lint-results.html
        destination: lint
    - store_artifacts:
        name: Store Jacoco report
        path: app/build/reports/jacoco
        destination: tests
